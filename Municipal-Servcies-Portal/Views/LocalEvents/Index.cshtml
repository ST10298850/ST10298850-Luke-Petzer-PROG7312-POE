@model Municipal_Servcies_Portal.ViewModels.LocalEventsViewModel
@{
    ViewData["Title"] = "Local Events";
}

<div class="events-container">
    
    <!-- ==================== SEARCH AND FILTER SECTION ==================== -->
    <form method="get" asp-controller="LocalEvents" asp-action="Index">
        <section class="filter-card">
            <div class="filter-row">
                <!-- Search by Event Name -->
                <div class="filter-field filter-field-search">
                    <label for="searchName" class="filter-label">Search Events</label>
                    <div class="filter-input-wrapper">
                        <i class="bi bi-search filter-icon"></i>
                        <input type="text" id="searchName" name="searchName" class="filter-input" 
                               placeholder="Search by event name or keyword..." 
                               value="@Context.Request.Query["searchName"]" />
                    </div>
                </div>
                
                <!-- Filter by Category -->
                <div class="filter-field filter-field-category">
                    <label for="category" class="filter-label">Category</label>
                    <select id="category" name="category" class="filter-select">
                        <option value="">All Categories</option>
                        @if (Model.Categories != null && Model.Categories.Any())
                        {
                            @foreach (var cat in Model.Categories)
                            {
                                <option value="@cat" selected="@(Context.Request.Query["category"] == cat ? "selected" : null)">@cat</option>
                            }
                        }
                    </select>
                </div>
                
                <!-- Filter by Date -->
                <div class="filter-field filter-field-date">
                    <label for="date" class="filter-label">Date</label>
                    <input type="date" id="date" name="date" class="filter-input filter-date-input" 
                           value="@Context.Request.Query["date"]" />
                </div>
                
                <!-- Clear Filters Button -->
                <div class="filter-field filter-field-clear">
                    <button type="button" class="filter-button filter-button-clear" 
                            onclick="window.location.href='@Url.Action("Index", "LocalEvents")'">
                        Clear Filters
                    </button>
                </div>
            </div>
        </section>
    </form>

    <!-- ==================== RECOMMENDATIONS SECTION ==================== -->
    @if (Model.RecommendedEvents != null && Model.RecommendedEvents.Any())
    {
        <section class="recommendations-section">
            <h2 class="section-title">Recommended for You</h2>
            <p class="recommendations-subtitle">Based on your interests and search history</p>

            <div class="recommendations-grid">
                @foreach (var evt in Model.RecommendedEvents.Take(3))
                {
                    var categoryColor = evt.Category.Contains("Community") ? "blue" : 
                                      evt.Category.Contains("Utilities") || evt.Category.Contains("Parks") ? "green" : 
                                      evt.Category.Contains("Cultural") || evt.Category.Contains("Culture") ? "orange" : "blue";

                    <div class="recommendation-card">
                        <div class="event-category-lip event-category-@categoryColor"></div>
                        <div class="recommendation-content">
                            <span class="event-category-badge badge-@categoryColor">@evt.Category</span>
                            <h3 class="recommendation-title">@evt.Title</h3>
                            <div class="recommendation-meta">
                                <i class="bi bi-calendar-event event-icon"></i>
                                <span>@evt.StartDate.ToString("MMM dd, yyyy")</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
    
    <!-- ==================== MAIN CONTENT: TWO-COLUMN LAYOUT ==================== -->
    <div class="content-layout">
        
        <!-- ==================== LEFT COLUMN: UPCOMING EVENTS ==================== -->
        <section class="events-column">
            <h2 class="section-title">Upcoming Events</h2>
            
            @if (Model.Events != null && Model.Events.Any())
            {
                <div class="events-list">
                    @foreach (var evt in Model.Events)
                    {
                        var categoryClass = evt.Category.ToLower().Replace(" ", "-").Replace("&", "and");
                        var categoryColor = evt.Category.Contains("Community") ? "blue" : 
                                          evt.Category.Contains("Utilities") || evt.Category.Contains("Parks") ? "green" : 
                                          evt.Category.Contains("Cultural") || evt.Category.Contains("Culture") ? "orange" : "blue";

                        <div class="event-card" data-category="@categoryClass">
                            <div class="event-category-lip event-category-@categoryColor"></div>
                            
                            <div class="event-content">
                                <div class="event-header">
                                    <h3 class="event-title">@evt.Title</h3>
                                    <span class="event-category-badge badge-@categoryColor">@evt.Category</span>
                                </div>
                                
                                <div class="event-meta">
                                    <div class="event-datetime">
                                        <i class="bi bi-calendar3 event-icon"></i>
                                        <span>@evt.StartDate.ToString("dddd, MMMM dd, yyyy") â€¢ @evt.StartDate.ToString("h:mm tt")</span>
                                    </div>
                                </div>
                                
                                <p class="event-description">@evt.Description</p>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <p>No upcoming events found.</p>
                </div>
            }
        </section>

        <!-- ==================== RIGHT COLUMN: MUNICIPAL ANNOUNCEMENTS ==================== -->
        <aside class="announcements-column">
            <h2 class="section-title">Municipal Announcements</h2>
            
            @if (Model.Announcements != null && Model.Announcements.Any())
            {
                <div class="announcements-list">
                    @foreach (var announcement in Model.Announcements)
                    {
                        <div class="announcement-card">
                            <div class="announcement-header">
                                <i class="bi bi-megaphone announcement-icon"></i>
                                <h3 class="announcement-title">@announcement.Title</h3>
                            </div>
                            <p class="announcement-date">@announcement.DatePosted.ToString("MMMM dd, yyyy")</p>
                            <p class="announcement-content">@announcement.Content</p>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <p>No announcements at this time.</p>
                </div>
            }
        </aside>
    </div>

</div>

<!-- ==================== AUTO-SUBMIT FILTER SCRIPT ==================== -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchNameInput = document.getElementById('searchName');
        const categorySelect = document.getElementById('category');
        const dateInput = document.getElementById('date');
        const form = document.querySelector('form');

        let debounceTimer;
        function debounceSubmit() {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                form.submit();
            }, 500);
        }

        if (searchNameInput) {
            searchNameInput.addEventListener('input', debounceSubmit);
        }

        if (categorySelect) {
            categorySelect.addEventListener('change', () => form.submit());
        }

        if (dateInput) {
            dateInput.addEventListener('change', () => form.submit());
        }
    });
</script>
