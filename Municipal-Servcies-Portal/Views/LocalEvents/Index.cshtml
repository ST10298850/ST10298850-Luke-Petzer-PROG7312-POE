@model Municipal_Servcies_Portal.ViewModels.LocalEventsViewModel
@{
    ViewData["Title"] = "Local Events";
}

<div class="events-container">
    <!-- Search/Filter Section -->
    <section class="filter-card">
        <div class="filter-row">
            <div class="filter-field filter-field-search">
                <label for="searchEvents" class="filter-label">Search Events</label>
                <div class="filter-input-wrapper">
                    <i class="filter-icon">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M7.33333 12.6667C10.2789 12.6667 12.6667 10.2789 12.6667 7.33333C12.6667 4.38781 10.2789 2 7.33333 2C4.38781 2 2 4.38781 2 7.33333C2 10.2789 4.38781 12.6667 7.33333 12.6667Z" stroke="#9CA3AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M14 14L11.1 11.1" stroke="#9CA3AF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </i>
                    <input type="text" id="searchEvents" class="filter-input" placeholder="Search by event name or keyword..." />
                </div>
            </div>
            
            <div class="filter-field filter-field-category">
                <label for="categorySelect" class="filter-label">Category</label>
                <select id="categorySelect" class="filter-select">
                    <option value="">All Categories</option>
                    @if (Model.Categories != null && Model.Categories.Any())
                    {
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    }
                </select>
            </div>
            
            <div class="filter-field filter-field-date">
                <label for="dateRange" class="filter-label">Date Range</label>
                <input type="date" id="dateRange" class="filter-input filter-date-input" />
            </div>
        </div>
        
        <div class="filter-actions">
            <button type="button" class="filter-button filter-button-clear">Clear Filters</button>
            <button type="button" class="filter-button filter-button-primary">Search Events</button>
        </div>
    </section>

    <!-- Two Column Layout: Events & Announcements -->
    <div class="content-layout">
        <!-- Left Column - Upcoming Events (2/3 width) -->
        <section class="events-column">
            <h2 class="section-title">Upcoming Events</h2>
            
            @if (Model.Events != null && Model.Events.Any())
            {
                <div class="events-list">
                    @foreach (var evt in Model.Events)
                    {
                        var categoryClass = evt.Category.ToLower().Replace(" ", "-").Replace("&", "and");
                        var categoryColor = evt.Category.Contains("Community") ? "blue" : 
                                          evt.Category.Contains("Utilities") || evt.Category.Contains("Parks") ? "green" : 
                                          evt.Category.Contains("Cultural") || evt.Category.Contains("Culture") ? "orange" : "blue";
                        
                        <div class="event-card" data-category="@categoryClass">
                            <div class="event-category-lip event-category-@categoryColor"></div>
                            <div class="event-content">
                                <div class="event-header">
                                    <h3 class="event-title">@evt.Title</h3>
                                    <span class="event-category-badge badge-@categoryColor">@evt.Category</span>
                                </div>
                                
                                <div class="event-meta">
                                    <div class="event-datetime">
                                        <svg class="event-icon" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M12.6667 2.66667H3.33333C2.59695 2.66667 2 3.26362 2 4V13.3333C2 14.0697 2.59695 14.6667 3.33333 14.6667H12.6667C13.403 14.6667 14 14.0697 14 13.3333V4C14 3.26362 13.403 2.66667 12.6667 2.66667Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M10.6667 1.33333V4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M5.33333 1.33333V4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M2 6.66667H14" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                        <span>@evt.StartDate.ToString("dddd, MMMM dd, yyyy") â€¢ @evt.StartDate.ToString("h:mm tt")</span>
                                    </div>
                                </div>
                                
                                <p class="event-description">@evt.Description</p>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <p>No upcoming events found.</p>
                </div>
            }
        </section>

        <!-- Right Column - Municipal Announcements (1/3 width) -->
        <aside class="announcements-column">
            <h2 class="section-title">Municipal Announcements</h2>
            
            @if (Model.Announcements != null && Model.Announcements.Any())
            {
                <div class="announcements-list">
                    @foreach (var announcement in Model.Announcements)
                    {
                        <div class="announcement-card">
                            <div class="announcement-header">
                                <svg class="announcement-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M15 6.66667C15 5.34058 14.4732 4.06881 13.5355 3.13113C12.5979 2.19345 11.3261 1.66667 10 1.66667C8.67392 1.66667 7.40215 2.19345 6.46447 3.13113C5.52678 4.06881 5 5.34058 5 6.66667C5 12.5 2.5 14.1667 2.5 14.1667H17.5C17.5 14.1667 15 12.5 15 6.66667Z" stroke="#1E40AF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M11.4417 17.5C11.2952 17.7526 11.0849 17.9622 10.8319 18.1079C10.5789 18.2537 10.2922 18.3304 10 18.3304C9.70781 18.3304 9.42116 18.2537 9.16814 18.1079C8.91513 17.9622 8.70484 17.7526 8.55833 17.5" stroke="#1E40AF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                <h3 class="announcement-title">@announcement.Title</h3>
                            </div>
                            <p class="announcement-date">@announcement.DatePosted.ToString("MMMM dd, yyyy")</p>
                            <p class="announcement-content">@announcement.Content</p>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <p>No announcements at this time.</p>
                </div>
            }
        </aside>
    </div>

    <!-- Recommendations Section (Full Width) -->
    @if (Model.Events != null && Model.Events.Any())
    {
        var recommendedEvents = Model.Events.Take(3).ToList();
        
        <section class="recommendations-section">
            <h2 class="section-title">Recommended for You</h2>
            <p class="recommendations-subtitle">Based on your interests and search history</p>
            
            <div class="recommendations-grid">
                @foreach (var evt in recommendedEvents)
                {
                    var categoryColor = evt.Category.Contains("Community") ? "blue" : 
                                      evt.Category.Contains("Utilities") || evt.Category.Contains("Parks") ? "green" : 
                                      evt.Category.Contains("Cultural") || evt.Category.Contains("Culture") ? "orange" : "blue";
                    
                    <div class="recommendation-card">
                        <div class="event-category-lip event-category-@categoryColor"></div>
                        <div class="recommendation-content">
                            <span class="event-category-badge badge-@categoryColor">@evt.Category</span>
                            <h3 class="recommendation-title">@evt.Title</h3>
                            <div class="recommendation-meta">
                                <svg class="event-icon" width="14" height="14" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M12.6667 2.66667H3.33333C2.59695 2.66667 2 3.26362 2 4V13.3333C2 14.0697 2.59695 14.6667 3.33333 14.6667H12.6667C13.403 14.6667 14 14.0697 14 13.3333V4C14 3.26362 13.403 2.66667 12.6667 2.66667Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M10.6667 1.33333V4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M5.33333 1.33333V4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M2 6.66667H14" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                <span>@evt.StartDate.ToString("MMM dd, yyyy")</span>
                            </div>
                            <a href="#" class="recommendation-link">View Details â†’</a>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
</div>
